DATA INTEGRATION SERVICE

new plan
-----------------------------------------------------------------------
1. Initialize 개선 (o)
	- 현재 생성되어진 source 테이블을 확인 후 메모리에 저장
	- 데이터 입력시 Create Table이 동작하지 않도록 수정

2. Custom Input Page 개발
	- user 등록시 개인적으로 입력가능한 source공간 할당
	- 자유롭게 데이터 입력이 가능한 UI 개발

3. Cluster Page 개발
	- 데이터를 군집하여 분류하는 기능 추가
	- 군집화된 데이터들의 계층화 하는 기능 추가
	- 계층화된 데이터들의 통계데이터 생성 기능 추가
	
4. Cluster View 개발
	- Cluster된 데이터를 볼 수 있는 ViewType 추가
	
5. 지지&저항에 대한 추세선으로 예측 차트 기능 추가
-----------------------------------------------------------------------

1. SetDataSource
	- 데이터 입력을 위한 API
	- Request Json
		{
			"source": "",
			"category": "",
			"rawdata": [{}],
			"unixtime": ""
		}
	- Response Json
		{
			"code": "",
			"message": ""
		}

2. GetDataSource
	- 데이터 출력을 위한 API
	- Request Json
		{
			"query":""
		}
	- Reponse Json
		{
			"rawdata":[{}]
		}

3. GetDataStructure
	- 현재 저장되어진 데이터의 구조를 출력하기 위한 API
	- Request Json
		
	- Reponse Json
		[
			{
				"base": "",
				"datatype": [
					{
						
					}
				]
			}
		]
	
4. GetCollectionModule
	- 데이터 수집 모듈에 대한 정보를 출력하기 위한 API
	- Request Json
	- Reponse Json
	
5. SetCollectionModule
	- 데이터 수집 모듈 인스턴스 생성 API

6. ExecuteCollectionModule
	- 수집 모듈을 실행하기 위한 API
	- Request Json
	- Reponse Json

7. SetDataView
	- DataView 설정을 위한 API
	- Request Json
	- Reponse Json

8. GetDataView
	- 설정된 DataView를 출력하기 위한 API
	- Request Json
	- Reponse Json


DATA INTEGRATION DATABASE

1. MariaDB를 기본 Database로 사용
	- Table
		- past_ {base}
			- idx
			- datatype
			- rawdata
			- unixtime
		- current_{base}
			- idx
			- datatype
			- rawdata
			- unixtime
		- member
			- idx
			- userid
			- name
			- password
			- privilege
			- email
			- phonenumber
			- unixtime
		- dataview
			- idx
			- name
			- viewtype
			- viewquery
			- options
			- unixtime
		- dataanalysis
			- idx
			- name
			- query
			- scheduletime
			- unixtime
		- datacollection
			- idx
			- collectionid
			- modulename
			- methodname
			- options
			- scheduletime
			- unixtime
			

DATA INTEGRATION WEB UI

1. Data View
	- DATA VIEW LIST
		- Current DataView : 실시간 통합 데이터의 테이블
		- Past DataView : 과거 통합 데이터의 그래프
	- DATA VIEW STAGE
		- SetStage : 스테이지를 설정하는 기능

2. Data Manager
	- Data Collection : 원천 데이터 수집
		- GetModule : 데이터수집이 가능한 모듈 정보
		- Setting Module : 해당 모듈의 필요한 정보를 설정
		- Start Collection : 설정된 데이터를 통해 DIS에 시작 명령(단발 또는 스케쥴)
		
	- Data Analysis : 수집된 원천 데이터를 활용하여 통계 및 분석 데이터 가공
		- GetDataStructure : 현재 수집된 데이터의 전체 구조를 받아옴
		- SetDataAnalysis : 데이터 분석에 대한 쿼리 및 옵션 정보를 저장
		- GetDataAnalysis : 저장되어진 데이터 분석에 대한 모든 정보를 받아옴
		- ExecuteDataAnalysis : 새로운 데이터를 만들수 있는 쿼리 또는 연산식을 설정
		
	- Data View : 데이터 뷰를 설정
		- Set Current Data View : 데이터뷰(테이블)에 보여질 컬럼 설정 및 해당 컬럼에 대한 임계치 설정 가능
			- Add SearchFilter : 데이터 뷰의 검색 필터를 설정할 수 있어야한다.
		- Set Past Data View : 데이터뷰(그래프)에 보여질 컬럼 설정 및 범위 설정
		
3. Member Management
	- Login / Logout
	- Sign Up
	
	
# Common DataTable

1. 데이터가 표시되어져야 한다.
2. 검색 기능이 존재한다. (Add Search Filter 형식)
3. 더블 클릭에 대한 Callback 정의 가능하여야 한다.
4. 옵션에 따라 데이터 추가 삭제에 UI가 존재한다.
5. Pagenation이 존재한다.



# 주식 종목 검색기 시나리오

1. 영웅차트 설정 ( macd , trix )
	- 일봉 단기 : 2 45 4
	- 일봉 중기 : 20 180 10
	- 일봉 trix : 25 9
	- 주봉 단기 : 2 45 4
	- 주봉 중기 : 12 60 10
	- 주봉 trix : 12 9

2. 컬렉터는 총 네개
	- 재무제표 컬렉터
	- 일단위 컬렉터
	- 분단위 컬렉터
	- 빈 종목 컬렉터
	
3. 장 마감시 영웅차트 지표 및 데이터를 수집 및 분석한다.
	- 주봉 macd, trix 매수신호가 나온 항목
	- 일봉 macd, trix 매수신호가 나온 항목
	- 재무제표에서 적자기업이 아닌 항목

4. 분석한 종목에 대해 빈 종목 컬렉터에 수집한다.

5. 장 시작시 분단위 컬렉터가 시작되며, 분단위에서 나온 데이터와 전날 분석된 데이터를 조합하여 매수신호를 발견한다.
	- 분석된 종목을 중심으로 거래량을 감시한다.
	- 거래량이 전날보다 많으며, 상승중이 항목에 대해 매수 알람을 발생시킨다.